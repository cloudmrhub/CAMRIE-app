AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  SAM Template for CalculationApp with a Step Functions workflow.
  The workflow first downloads file information and content (using metadata from a DynamoDB table)
  and then triggers a calculation function.

Parameters:
  ResultsBucketPName:
    Type: String
    Description: "The fixed name for the Results bucket"
  FailedBucketPName:
    Type: String
    Description: "The fixed name for the Failed bucket"
  SequenceMetaDataTablePName:
    Type: String
    Description: "The name of the DynamoDB table that stores sequence metadata."
    Default: "SequenceMetaData"
  MarieFieldMetaDataTablePName:
    Type: String
    Description: "The name of the DynamoDB table that stores field metadata."
    Default: "MarieFieldMetaData"
  SequenceBucketPName:
    Type: String
    Description: "The name of the S3 bucket that stores sequence data."
    Default: "sequence-data"
  MarieFieldBucketPName:
    Type: String
    Description: "The name of the S3 bucket that stores field data."
    Default: "field-data"

Resources:
  # S3 Bucket for uploads.
  CAMRIEjobsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "camrie-jobs-${AWS::AccountId}-${AWS::Region}"

  # Function to download data.
  DownloadDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: DownloadDataFunction
      Handler: task.handler
      Runtime: python3.10
      CodeUri: src/vertebra/
      Tags:
        owner: "montie01"
        maintainer: "montie01"
        project: "CAMRIE"
        version: "v1"
        team: "cloudmrhub"
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref MarieFieldMetaDataTablePName
        - DynamoDBReadPolicy:
            TableName: !Ref SequenceMetaDataTablePName
        - S3ReadPolicy:
            BucketName: !Ref CAMRIEjobsBucket
      Environment:
        Variables:
          MARIE_FIELD_TABLE_NAME: !Ref MarieFieldMetaDataTablePName
          SEQUENCE_TABLE_NAME: !Ref SequenceMetaDataTablePName

  # Function that performs the calculation.
  RunJobFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: >
        This function runs the CAMRIE computation (it is the muscle worker).
        It should be triggered when an object is created in the jobs bucket.
      PackageType: Image
      Timeout: 900
      MemorySize: 10240
      ReservedConcurrentExecutions: 100
      EphemeralStorage:
        Size: 10240
      Tags:
        owner: "montie01"
        maintainer: "montie01"
        project: "CAMRIE"
        version: "v1"
        team: "cloudmrhub"
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
                - s3:ListBucket
              Resource:
                - !Sub "arn:aws:s3:::${MarieFieldBucketPName}"
                - !Sub "arn:aws:s3:::${MarieFieldBucketPName}/*"
            - Effect: Allow
              Action:
                - s3:PutObject
              Resource:
                - !Sub "arn:aws:s3:::${ResultsBucketPName}"
                - !Sub "arn:aws:s3:::${ResultsBucketPName}/*"
            - Effect: Allow
              Action:
                - s3:PutObject
              Resource:
                - !Sub "arn:aws:s3:::${FailedBucketPName}"
                - !Sub "arn:aws:s3:::${FailedBucketPName}/*"
            - Effect: Allow
              Action:
                - s3:GetObject
                - s3:ListBucket
              Resource:
                - !Sub "arn:aws:s3:::${SequenceBucketPName}"
                - !Sub "arn:aws:s3:::${SequenceBucketPName}/*"
            - Effect: Allow
              Action: 
                - s3:GetObject
                - s3:ListBucket
              Resource: 
                - !Sub "arn:aws:s3:::${CAMRIEjobsBucket}"
                - !Sub "arn:aws:s3:::${CAMRIEjobsBucket}/*"

      Environment:
        Variables:
          DEBUG: "False"
          RESULTS_BUCKET: !Ref ResultsBucketPName
          FAILED_BUCKET: !Ref FailedBucketPName
          SEQUENCE_BUCKET: !Ref SequenceBucketPName
          MARIE_FIELD_BUCKET: !Ref MarieFieldBucketPName
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: src/muscle/
      DockerTag: python3.10-v1

  # IAM Role for the state machine to invoke Lambda functions.
  CalculationStateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: states.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: StateMachineInvokeLambda
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: lambda:InvokeFunction
                Resource:
                  - !GetAtt DownloadDataFunction.Arn
                  - !GetAtt RunJobFunction.Arn

  # Step Functions state machine that orchestrates the workflow.
  CalculationStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Role: !GetAtt CalculationStateMachineRole.Arn
      Definition:
        StartAt: DownloadData
        States:
          DownloadData:
            Type: Task
            Resource: !GetAtt DownloadDataFunction.Arn
            ResultPath: $.downloadResult
            Next: Calculation
            Catch:
              - ErrorEquals: ["States.ALL"]
                ResultPath: $.error
                Next: FailureState
          Calculation:
            Type: Task
            Resource: !GetAtt RunJobFunction.Arn
            Parameters:
              downloadResult.$: $.downloadResult
            End: true
            Catch:
              - ErrorEquals: ["States.ALL"]
                ResultPath: $.error
                Next: FailureState
          FailureState:
            Type: Fail
            Comment: "Workflow failed"

  # IAM Role for EventBridge to invoke the state machine.
  EventBridgeStepFunctionsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: InvokeStateMachinePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: states:StartExecution
                Resource: !GetAtt CalculationStateMachine.Arn

  # EventBridge Rule to trigger state machine on S3 upload.
  S3UploadRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "Trigger state machine on S3 upload with S3 event format"
      EventPattern:
        source:
          - aws.s3
        detail-type:
          - "Object Created"
        detail:
          bucket:
            name:
              - !Ref CAMRIEjobsBucket
      Targets:
        - Arn: !GetAtt CalculationStateMachine.Arn
          Id: "CalculationStateMachineTarget"
          RoleArn: !GetAtt EventBridgeStepFunctionsRole.Arn
          InputTransformer:
            InputPathsMap:
              bucket: "$.detail.bucket.name"
              key: "$.detail.object.key"
            InputTemplate: |
              {
                "Records": [
                  {
                    "s3": {
                      "bucket": {
                        "name": "<bucket>"
                      },
                      "object": {
                        "key": "<key>"
                      }
                    }
                  }
                ]
              }


Outputs:
  CAMRIEjobsBucket:
    Description: "The S3 bucket for CAMRIE jobs"
    Value: !Ref CAMRIEjobsBucket
    Export:
      Name: CAMRIEjobsBucket
